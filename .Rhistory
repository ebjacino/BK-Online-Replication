scale_color_manual(values = c(angular_color,curved_color,third_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
#stat_compare_means(comparisons = consonant_comparisons, label.y = c(1.1, 1.3, 1.5),
#label = "p.signif", hide.ns = FALSE) +
ylab("bias") +
xlab("consonant type")+
facet_wrap("Range")
consonant_graph
#graph
consonant_graph <- ggplot(data_split_consonant_type, aes(x = consonant_type, y = bias)) +
geom_col(consonant_graph_df_split, mapping = aes(x = consonant_type, y = mean_bias), color = "black", fill = NA) +
geom_point(consonant_graph_points, mapping = aes(x = consonant_type, y = bias_round, size = Count, color = consonant_type)) +
#geom_jitter(data_split_consonant_type, mapping = aes(x = consonant_type, y = bias))+
geom_col(consonant_graph_df_split, mapping = aes(x = consonant_type, y = mean_bias, fill = consonant_type), alpha = 0.5) +
geom_point(consonant_graph_df_split, mapping = aes(x = consonant_type, y = mean_bias)) +
geom_errorbar(consonant_graph_df_split, mapping = aes(x = consonant_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(-.5,.5) +
scale_fill_manual(values = c(angular_color,curved_color,third_color)) +
scale_color_manual(values = c(angular_color,curved_color,third_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
#stat_compare_means(comparisons = consonant_comparisons, label.y = c(1.1, 1.3, 1.5),
#label = "p.signif", hide.ns = FALSE) +
ylab("bias") +
xlab("consonant type")+
facet_wrap("Range")
consonant_graph
m_range_co <- glm(bias ~ Range, data = magnitude_consonant_type)
m_sound_co <- glm(bias ~ consonant_type, data = magnitude_consonant_type)
m_mult_co <- glm(bias ~ Range*consonant_type, data = magnitude_consonant_type)
m_add_co <- glm(bias ~ Range+consonant_type, data = magnitude_consonant_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range_co,m_sound_co,m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_add_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = magnitude_consonant_type, family = binomial)
summary(stim_c)
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = magnitude_consonant_type)
summary(stim_c)
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = magnitude_consonant_type, family = binomial) #should the binomial be there if it's the magnitude data?
summary(stim_c)
ggplot(data_consonant, aes(x = consonant_type, y = bias)) +
geom_boxplot() +
#  facet_wrap(~ group) +
stat_summary(fun.y=mean, geom="point", shape=20, size=5, color="black", fill="black") +
ylim(0,2) +
theme_light()+
stat_compare_means(comparisons = consonant_comparisons, label.y = c(1.1, 1.3, 1.5),
label = "p.signif", hide.ns = TRUE)
View(all_data_df)
c_vs_v <- glm(bias ~ vowel_type + consonant_type, data = all_data_df)
c_vs_v_df <- all_data_df %>% group_by(ID, stimulus, Range, vowel_type, consonant_type)
View(c_vs_v_df)
data_vowel_type = all_data_df_c %>% group_by(vowel_type, ID,Range) %>%
summarise(bias = sum(sharp_shape_choice)/n())
View(data_vowel_type)
vowel_type_mean <- data_vowel_type %>%  group_by(vowel_type,Range) %>%
summarize(mean_bias = mean(bias),
sd_bias = sd(bias),
se_bias=sd_bias/sqrt(n()))
View(vowel_type_mean)
vowel_points <- data_vowel_type %>% group_by(vowel_type,ID,Range)
View(vowel_points)
vowel_points <- data_vowel_type %>% group_by(vowel_type,Range)
vowel_points <- data_vowel_type %>% group_by(vowel_type,Range)
View(vowel_points)
vowel_type_mean <- data_vowel_type %>%  group_by(vowel_type,Range) %>%
summarize(mean_bias = mean(bias),
sd_bias = sd(bias),
se_bias=sd_bias/sqrt(n()))
vowel_points <- data_vowel_type %>% group_by(vowel_type, Range)
vowel_plot <- ggplot(data_vowel_type, aes(x = vowel_type, y = bias)) +
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias), color = "black", fill = NA) +
#geom_point(vowel_points, mapping = aes(x = vowel_type, y = bias_round, size = Count, color = vowel_type)) +
geom_jitter(data_vowel_type, mapping = aes(x = consonant_type, y = bias))+
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, fill = vowel_type), alpha = 0.5) +
geom_point(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias)) +
geom_errorbar(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(0, 1.5) +
scale_fill_manual(values = c(curved_color,angular_color)) +
scale_color_manual(values = c(curved_color,angular_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("Choice Bias") +
xlab("Vowel type")
vowel_plot
vowel_plot <- ggplot(data_vowel_type, aes(x = vowel_type, y = bias)) +
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias), color = "black", fill = NA) +
#geom_point(vowel_points, mapping = aes(x = vowel_type, y = bias_round, size = Count, color = vowel_type)) +
geom_jitter(data_vowel_type, mapping = aes(x = vowel_type, y = bias))+
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, fill = vowel_type), alpha = 0.5) +
geom_point(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias)) +
geom_errorbar(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(0, 1.5) +
scale_fill_manual(values = c(curved_color,angular_color)) +
scale_color_manual(values = c(curved_color,angular_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("Choice Bias") +
xlab("Vowel type")
vowel_plot
vowel_plot <- ggplot(data_vowel_type, aes(x = vowel_type, y = bias)) +
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias), color = "black", fill = NA) +
#geom_point(vowel_points, mapping = aes(x = vowel_type, y = bias_round, size = Count, color = vowel_type)) +
geom_jitter(data_vowel_type, mapping = aes(x = vowel_type, y = bias))+
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, fill = vowel_type), alpha = 0.5) +
geom_point(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias)) +
geom_errorbar(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(0, 1.5) +
scale_fill_manual(values = c(curved_color,angular_color)) +
scale_color_manual(values = c(curved_color,angular_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("Choice Bias") +
xlab("Vowel type") +
facet_wrap("Range")
vowel_plot
vowel_plot <- ggplot(data_vowel_type, aes(x = vowel_type, y = bias)) +
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias), color = "black", fill = NA) +
#geom_point(vowel_points, mapping = aes(x = vowel_type, y = bias_round, size = Count, color = vowel_type)) +
geom_jitter(data_vowel_type, mapping = aes(x = vowel_type, y = bias))+
geom_col(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, fill = vowel_type), alpha = 0.5) +
geom_point(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias)) +
geom_errorbar(vowel_type_mean, mapping = aes(x = vowel_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(0,1) +
scale_fill_manual(values = c(curved_color,angular_color)) +
scale_color_manual(values = c(curved_color,angular_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("proportion of spiky choices") +
xlab("Vowel type") +
facet_wrap("Range")
vowel_plot
m_range_co <- glm(bias ~ Range, data = data_vowel_type)
m_sound_co <- glm(bias ~ vowel_type, data = data_vowel_type)
m_mult_co <- glm(bias ~ Range*vowel_type, data = data_vowel_type)
m_add_co <- glm(bias ~ Range+vowel_type, data = data_vowel_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range_co,m_sound_co,m_mult_co, m_add_co)
m_mult_co <- glm(bias ~ Range*vowel_type, data = data_vowel_type)
m_add_co <- glm(bias ~ Range+vowel_type, data = data_vowel_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_add_co, ~ Range | vowel_type) , method = "pairwise", type = "response")
Anova(m_add_co)
###########difference between each other for 9 to 11 and adults?
stim_v <- glm(bias ~ 0 + vowel_type:Range, data = data_vowel_type)
summary(stim_v)
###########difference between each other for 9 to 11 and adults?
stim_v <- glm(bias ~ 0 + vowel_type:Range, data = data_vowel_type, family = binomial)
summary(stim_v)
######################################## magnitude only, no transformation except minus .5 and without binomial family
magnitude_consonant_type = all_data_df_c %>% group_by(consonant_type, ID,Range) %>%
summarise(bias = sum(correct)/n() -.5)
#by range. is there a difference between bias for consonant_type  for different age ranges?
m_range_co <- glm(bias ~ Range, data = magnitude_consonant_type)
m_mult_co <- glm(bias ~ Range*consonant_type, data = magnitude_consonant_type)
m_add_co <- glm(bias ~ Range+consonant_type, data = magnitude_consonant_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range_co,m_sound_co,m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_add_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = magnitude_consonant_type)
summary(stim_c)
#graph this but make it absolute values, not sharp shape choice
#df for graphing
consonant_graph_df_mag <- magnitude_consonant_type %>% group_by(consonant_type,Range) %>%
summarize(mean_bias = mean(bias),
sd_bias = sd(bias),
se_bias=sd_bias/sqrt(n()),
N = n())
#graph this but make it absolute values, not sharp shape choice
#df for graphing
consonant_graph_df_mag <- magnitude_consonant_type %>% group_by(consonant_type,Range) %>%
summarize(mean_bias = mean(bias),
sd_bias = sd(bias),
se_bias=sd_bias/sqrt(n()),
N = n())
#df for points
consonant_graph_points_mag <- magnitude_consonant_type %>% mutate(bias_round = round_any(bias,0.25)) %>%
group_by(consonant_type,bias_round) %>%
summarise(Count = n())
#graph
consonant_graph_m <- ggplot(magnitude_consonant_type, aes(x = consonant_type, y = bias)) +
geom_col(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias), color = "black", fill = NA) +
geom_point(consonant_graph_points_mag, mapping = aes(x = consonant_type, y = bias_round, size = Count, color = consonant_type)) +
#geom_jitter(magnitude_consonant_type, mapping = aes(x = consonant_type, y = bias))+
geom_col(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias, fill = consonant_type), alpha = 0.5) +
geom_point(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias)) +
geom_errorbar(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(0,1) +
scale_fill_manual(values = c(angular_color,curved_color,third_color)) +
scale_color_manual(values = c(angular_color,curved_color,third_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("bias") +
xlab("consonant type")+
facet_wrap("Range")
#graph
consonant_graph_m <- ggplot(magnitude_consonant_type, aes(x = consonant_type, y = bias)) +
geom_col(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias), color = "black", fill = NA) +
geom_point(consonant_graph_points_mag, mapping = aes(x = consonant_type, y = bias_round, size = Count, color = consonant_type)) +
#geom_jitter(magnitude_consonant_type, mapping = aes(x = consonant_type, y = bias))+
geom_col(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias, fill = consonant_type), alpha = 0.5) +
geom_point(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias)) +
geom_errorbar(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(-.5,.5) +
scale_fill_manual(values = c(angular_color,curved_color,third_color)) +
scale_color_manual(values = c(angular_color,curved_color,third_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("bias") +
xlab("consonant type")+
facet_wrap("Range")
consonant_graph_m
#sound:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
#need to center this around 0 instead of .5
orth_trans <- all_data_df %>% mutate(stimulus = toupper(sub(".wav","",sub("sound/","",stimulus)))) %>%
group_by(ID,sound,Range) %>%
summarise(bias = sum(correct)/n()- 0.5)
stim_o <- glm(bias ~ 0 + sound:Range, data = orth_trans)
summary(stim_o)
congruency_plot_new <- ggplot(data_congruency, aes(x = congruent, y = bias)) +
geom_col(congruency_new, mapping = aes(x = congruent, y = mean_bias), color = "black", fill = NA) +
geom_point(congruency_new_points, mapping = aes(x = congruent, y = bias_round, size = Count, color = congruent)) +
geom_col(congruency_new, mapping = aes(x = congruent, y = mean_bias, fill = congruent), alpha = 0.5) +
geom_point(congruency_new, mapping = aes(x = congruent, y = mean_bias)) +
geom_errorbar(congruency_new, mapping = aes(x = congruent, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
#stat_compare_means(comparisons = congruency_comparisions, label.y = c(1.2),
#label = "p.signif", hide.ns = TRUE) +
scale_fill_manual(values = c(angular_color,curved_color)) +
scale_color_manual(values = c(angular_color,curved_color)) +
theme_classic() +
ylim(0,1) +
ylab("Choice Bias") +
scale_y_continuous(limits = c(0, 1.5), breaks = c(0.00, 0.25, 0.50, 0.75, 1)) +
xlab("Congruency") +
facet_wrap("Range")
congruency_plot_new
congruency_plot_new <- ggplot(data_congruency, aes(x = congruent, y = bias)) +
geom_col(congruency_new, mapping = aes(x = congruent, y = mean_bias), color = "black", fill = NA) +
geom_point(congruency_new_points, mapping = aes(x = congruent, y = bias_round, size = Count, color = congruent)) +
geom_col(congruency_new, mapping = aes(x = congruent, y = mean_bias, fill = congruent), alpha = 0.5) +
geom_point(congruency_new, mapping = aes(x = congruent, y = mean_bias)) +
geom_errorbar(congruency_new, mapping = aes(x = congruent, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
#stat_compare_means(comparisons = congruency_comparisions, label.y = c(1.2),
#label = "p.signif", hide.ns = TRUE) +
scale_fill_manual(values = c(angular_color,curved_color)) +
scale_color_manual(values = c(angular_color,curved_color)) +
theme_classic() +
ylim(0,1) +
ylab("Choice Bias") +
scale_y_continuous(limits = c(0, 1), breaks = c(0.00, 0.25, 0.50, 0.75, 1)) +
xlab("Congruency") +
facet_wrap("Range")
congruency_plot_new
#get one row per participant with one average score (average of all trials)
data_WJ <- all_data_df %>% group_by(ID,Age,Range,WJ_score) %>%
summarise(bias = mean(correct))
ggplot(data_WJ,aes(x = WJ_score, y = bias, color = Age))+
geom_point()+
#geom_smooth(se = FALSE, method = "glm", formula = "y ~ poly(x,2)")+
geom_smooth(se = FALSE, method = "glm")+
scale_color_viridis()+
theme_classic()
#binned by range?
ggplot(data_WJ,aes(x = WJ_score, y = bias, color = Age))+
geom_point()+
geom_smooth(se = FALSE, method = "glm")+
scale_color_viridis()+
theme_classic()+
facet_wrap("Range")
cor.test(data_WJ$WJ_score, data_WJ$bias)
library(lme4)
#library(ppcor)
pcor.test(data_WJ$WJ_score,data_WJ$bias,data_WJ$Age,method="pearson")
spcor.test(data_WJ$WJ_score,data_WJ$bias,data_WJ$Age,method="pearson")
#try this binned by age, for each age range
#get one row per participant with one average score (average of all trials) for 6-8 year olds only
data_WJ_6to8 <- all_data_df %>% group_by(ID,Age,Range,WJ_score) %>%
filter(Range == "6 to 8") %>%
summarise(bias = mean(correct))
#regular correlation
cor.test(data_WJ_6to8$WJ_score,data_WJ_6to8$bias,method="pearson")
#partial and semipartial controlling for age
pcor.test(data_WJ_6to8$WJ_score,data_WJ_6to8$bias,data_WJ_6to8$Age,method="pearson")
#fixed effect model
bias_WJ_glmm_fixed_9to11 <- glm(bias ~ WJ_score + Age, data = data_WJ_9to11)
#########################9 to 11####
#get one row per participant with one average score (average of all trials) for 6-8 year olds only
data_WJ_9to11 <- all_data_df %>% group_by(ID,Age,Range,WJ_score) %>%
filter(Range == "9 to 11") %>%
summarise(bias = mean(correct))
#fixed effect model
bias_WJ_glmm_fixed_9to11 <- glm(bias ~ WJ_score + Age, data = data_WJ_9to11)
#regular correlation
cor.test(data_WJ_9to11$WJ_score,data_WJ_9to11$bias,method="pearson")
#partial correlation controlling for age
pcor.test(data_WJ_9to11$WJ_score,data_WJ_9to11$bias,data_WJ_9to11$Age,method="pearson")
#########################adult####
#get one row per participant with one average score (average of all trials) for 6-8 year olds only
data_WJ_adult <- all_data_df %>% group_by(ID,Age,Range,WJ_score) %>%
filter(Range == "Adult") %>%
summarise(bias = mean(correct))
#regular correlation
cor.test(data_WJ_adult$WJ_score,data_WJ_adult$bias,method="pearson")
#partial correlation controlling for age
pcor.test(data_WJ_adult$WJ_score,data_WJ_adult$bias,data_WJ_adult$Age,method="pearson")
#########################kids only####
#get one row per participant with one average score (average of all trials) for all kids
data_WJ_kids <- all_data_df %>% group_by(ID,Age,Range,WJ_score) %>%
filter(!(Range == "Adult")) %>%
summarise(bias = mean(correct))
#regular correlation
cor.test(data_WJ_kids$WJ_score,data_WJ_kids$bias,method="pearson")
#partial correlation controlling for age
pcor.test(data_WJ_kids$WJ_score,data_WJ_kids$bias,data_WJ_kids$Age,method="pearson")
#semi partial correlation?
#library(ppcor)
spcor.test(data_WJ_kids$WJ_score,data_WJ_kids$bias,data_WJ_kids$Age,method="pearson")
#regular correlation
cor.test(data_WJ_kids$WJ_score,data_WJ_kids$bias,method="pearson")
#partial correlation controlling for age
pcor.test(data_WJ_kids$WJ_score,data_WJ_kids$bias,data_WJ_kids$Age,method="pearson")
voicing_mean <- all_data_df %>%  group_by(voicing,ID,Range) %>%
summarise(bias = sum(correct)/n()) %>%
#mutate(bias = ifelse(voicing == "/i/",-1*bias,bias)) %>%
group_by(voicing) %>%
summarize(mean_bias = mean(bias),
sd_bias = sd(bias),
se_bias=sd_bias/sqrt(n()))
voicing_points <- all_data_df %>% group_by(voicing,ID,Range) %>%
summarise(bias = sum(correct)/n()) %>%
ungroup() %>%
#mutate(bias = ifelse(voicing == "/i/",-1*bias,bias)) %>%
mutate(bias_round = round_any(bias,0.25)) %>%
group_by(voicing,bias_round) %>%
summarise(Count = n())
voicing_plot <- ggplot(data_voicing, aes(x = voicing, y = bias)) +
geom_col(voicing_mean, mapping = aes(x = voicing, y = mean_bias), color = "black", fill = NA) +
geom_point(voicing_points, mapping = aes(x = voicing, y = bias_round, size = Count, color = voicing)) +
geom_col(voicing_mean, mapping = aes(x = voicing, y = mean_bias, fill = voicing), alpha = 0.5) +
geom_point(voicing_mean, mapping = aes(x = voicing, y = mean_bias)) +
geom_errorbar(voicing_mean, mapping = aes(x = voicing, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
#stat_compare_means(comparisons = voicing_comparisions, label.y = c(1.2),
#label = "p.signif", hide.ns = TRUE) +
theme_classic() +
ylim(0, 1.5) +
scale_fill_manual(values = c(curved_color,angular_color)) +
scale_color_manual(values = c(curved_color,angular_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("Choice Bias") +
xlab("Consonant voicing")+
facet_wrap("Range")
voicing_plot
#there is no difference in the strength of choice bias elicited by each type of consonant voicing, so let's display this as the proportion of sharp choices. using all_data_df_c which is defined further down
data_voicing = all_data_df_c %>% group_by(voicing, ID,Range) %>%
summarise(bias = sum(sharp_shape_choice)/n())
View(data_voicing)
ggplot(data_WJ,aes(x = WJ_score, y = bias, color = Age))+
geom_point()+
#geom_smooth(se = FALSE, method = "glm", formula = "y ~ poly(x,2)")+
geom_smooth(se = FALSE, method = "glm")+
scale_color_viridis()+
theme_classic()
#by range
m_range <- glm(bias ~ Range, data = data_orth)
m_sound <- glm(bias ~ sound, data = data_orth)
m_mult <- glm(bias ~ Range*sound, data = data_orth)
m_add <- glm(bias ~ Range+sound, data = data_orth)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range,m_sound,m_mult, m_add)
Anova(m_mult)
contrast(emmeans(m_mult, ~ Range | sound) , method = "pairwise", type = "response")
bko1_range_difference_table <-contrast(emmeans(m_mult, ~ Range | sound) , method = "pairwise", type = "response")
#binned by range?
ggplot(data_WJ,aes(x = WJ_score, y = bias, color = Age))+
geom_point()+
geom_smooth(se = FALSE, method = "glm")+
scale_color_viridis()+
theme_classic()+
facet_wrap("Range")
ggplot(data_WJ,aes(x = WJ_score, y = bias, color = Age))+
geom_point()+
#geom_smooth(se = FALSE, method = "glm", formula = "y ~ poly(x,2)")+
geom_smooth(se = FALSE, method = "glm")+
scale_color_viridis()+
theme_classic()
data_consonant_type = all_data_df_c %>% group_by(consonant_type, ID,Range) %>%
summarise(bias = sum(sharp_shape_choice)/n())
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = data_consonant_type)
summary(stim_c)
data_consonant_type = all_data_df_c %>% group_by(consonant_type, ID,Range) %>%
summarise(bias = sum(sharp_shape_choice)/n()-0.5)
all_data_df_c <- all_data_df %>% mutate(round_shape_choice = ifelse(grepl("bouba",left_image)  & response == left_key,
1,
ifelse(grepl("bouba",right_image)  & response == right_key, 1,
0))) %>%
mutate(sharp_shape_choice = ifelse(grepl("kiki",left_image)  & response == left_key,
1,
ifelse(grepl("kiki",right_image)  & response == right_key, 1,
0)))
data_consonant_type = all_data_df_c %>% group_by(consonant_type, ID,Range) %>%
summarise(bias = sum(sharp_shape_choice)/n()-0.5)
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = data_consonant_type)
summary(stim_c)
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = magnitude_consonant_type)
summary(stim_c)
#by range. is there a difference between bias for consonant_type  for different age ranges?
m_range_co <- glm(bias ~ Range, data = magnitude_consonant_type)
m_sound_co <- glm(bias ~ consonant_type, data = magnitude_consonant_type)
m_mult_co <- glm(bias ~ Range*consonant_type, data = magnitude_consonant_type)
m_add_co <- glm(bias ~ Range+consonant_type, data = magnitude_consonant_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range_co,m_sound_co,m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_add_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
ggplot(magnitude_consonant_type, aes(Range,bias, color = consonant_type ))+
geom_boxplot()+
theme_classic()
contrast(emmeans(m_add_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
contrast(emmeans(m_mult_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
Anova(m_add_co)
contrast(emmeans(m_mult_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
m_mult_co <- glm(bias ~ Range:consonant_type, data = magnitude_consonant_type)
contrast(emmeans(m_mult_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
Anova(m_add_co)
contrast(emmeans(m_mult_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
m_mult_co <- glm(bias ~ Range*consonant_type, data = magnitude_consonant_type)
m_add_co <- glm(bias ~ Range+consonant_type, data = magnitude_consonant_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range_co,m_sound_co,m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_mult_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_range_co,m_sound_co,m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_mult_co, ~ Range | consonant_type) , method = "pairwise", type = "response")
#consonant_type:Range gets you the interaction term, which is the difference from 0 for each stimulus for each age range
stim_c <- glm(bias ~ 0 + consonant_type:Range, data = magnitude_consonant_type)
summary(stim_c)
m_mult_co <- glm(bias ~ Range*vowel_type, data = data_vowel_type)
m_add_co <- glm(bias ~ Range+vowel_type, data = data_vowel_type)
#trying to find the model that best fits the data with the least number of terms. not over or under fit to the data.
#IC tab multiplies the residuals by the number of terms, higher number is worse
ICtab(m_mult_co, m_add_co)
Anova(m_add_co)
contrast(emmeans(m_add_co, ~ Range | vowel_type) , method = "pairwise", type = "response")
vowel_plot
###########difference between each other for 9 to 11 and adults?
data_vowel_type_trans = all_data_df_c %>% group_by(vowel_type, ID,Range) %>%
summarise(bias = sum(sharp_shape_choice)/n()-.5)
stim_v <- glm(bias ~ 0 + vowel_type:Range, data = data_vowel_type_trans) #binomial makes them all nonsignificant
summary(stim_v)
#graph
consonant_graph_m <- ggplot(magnitude_consonant_type, aes(x = consonant_type, y = bias)) +
geom_col(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias), color = "black", fill = NA) +
geom_point(consonant_graph_points_mag, mapping = aes(x = consonant_type, y = bias_round, size = Count, color = consonant_type)) +
#geom_jitter(magnitude_consonant_type, mapping = aes(x = consonant_type, y = bias))+
geom_col(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias, fill = consonant_type), alpha = 0.5) +
geom_point(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias)) +
geom_errorbar(consonant_graph_df_mag, mapping = aes(x = consonant_type, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1, width = 0.5) +
theme_classic() +
ylim(-.5,.5) +
scale_fill_manual(values = c(angular_color,curved_color,third_color)) +
scale_color_manual(values = c(angular_color,curved_color,third_color)) +
scale_size_continuous(breaks = c(5, 10, 15)) +
ylab("bias") +
xlab("consonant type")+
facet_wrap("Range")
consonant_graph_m
new_color_all_stim <- ggplot() +
geom_col(stimulus_bias_data, mapping = aes(x = stimulus, y = mean_bias), color = "black", fill = NA) +
geom_point(stimulus_bias_data_points, mapping =aes(x = stimulus, y = bias, size = Count, color= sound)) +
geom_col(stimulus_bias_data, mapping = aes(x = stimulus, y = mean_bias, fill = sound), alpha = 0.5) +
geom_point(stimulus_bias_data, mapping = aes(x = stimulus, y = mean_bias)) +
geom_errorbar(stimulus_bias_data, mapping = aes(x = stimulus, y = mean_bias, ymin = mean_bias-se_bias, ymax = mean_bias+se_bias), alpha = 1) +
scale_fill_manual(values = c(angular_color,curved_color)) +
scale_color_manual(values = c(angular_color,curved_color)) +
theme_classic() +
ylim(-0.5,0.5) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ylab("Choice Bias") +
xlab("Stimulus") +
facet_wrap("Range")
new_color_all_stim
#ggsave("graphs/presentation graphs/kids_all_stim.png", width = 10, height = 5)
magnitude_consonant_type_05 <- magnitude_consonant_type %>% mutate(bias = bias + 0.5)
View(magnitude_consonant_type_05)
View(all_data_df_c)
real_binom <- glm(correct ~ 0 + Range:consonant_type, data = all_data_df_c, family = "binomial")
summary(real_binom)
plogis(0.3830)
real_binom <- glmer(correct ~ 0 + Range:consonant_type, data = all_data_df_c, family = "binomial")
real_binom <- glmer(correct ~ 0 + Range:consonant_type + (1|ID), data = all_data_df_c, family = "binomial")
summary(real_binom)
